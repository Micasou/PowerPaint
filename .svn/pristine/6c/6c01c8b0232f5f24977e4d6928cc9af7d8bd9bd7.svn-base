/**
 * 
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.geom.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Ellipse2D;
import java.awt.Graphics;
import javax.swing.JComponent;
import javax.swing.JPanel;

import javafx.scene.Cursor;
import javafx.scene.shape.Line;


/**
 * @author ao1013
 * @version 11/7/15 TCSS 305
 */
public class Canvas extends JPanel implements MouseMotionListener, MouseListener {
    
    /**
     * Auto Generated Serial Version.
     */
    private static final long serialVersionUID = -4358260754220693631L;
    /** The default size for this JPanel. */
    private static final Dimension DEFAULT_SIZE = new Dimension(400, 300);
    /**
     * Begin point for mouse action.
     */
    private Point myStartPoint;
    /**
     * End point for mouse action.
     */
    private Point myEndPoint;
    private boolean drawable = true;
    /**
     * The Default constructor to initialize all variables of the canvas.
     */
    public Canvas() {
        super();
        addMouseMotionListener(this);
        myStartPoint = null;
        myEndPoint = new Point();
        this.setPreferredSize(DEFAULT_SIZE);
        this.setBackground(Color.WHITE);     
    }
    @Override
    public void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g = (Graphics2D) theGraphics;
        if(myStartPoint != null && myEndPoint != null) {
          
           g.drawLine((int) myStartPoint.getX(), 
                      (int) myStartPoint.getY(), 
                      (int) myEndPoint.getX(), 
                      (int) myEndPoint.getY());
        }
    }


    @Override
    public void mouseClicked(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        myStartPoint = theMouseEvent.getPoint();
        System.out.println("Ckicked "); 
        repaint();
    }

    @Override
    public void mouseEntered(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
       
        System.out.println("Entered "); 
        repaint();
    }

    @Override
    public void mouseExited(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        System.out.println("Exited "); 
        repaint();
        
    }

    @Override
    public void mousePressed(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        System.out.println("Pressed "); 
        repaint();
    }

    @Override
    public void mouseReleased(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        myEndPoint = theMouseEvent.getPoint();
        System.out.println("Released ");  
        repaint();
    }

    @Override
    public void mouseDragged(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        
        if(myStartPoint == null && myEndPoint != null) {
            myStartPoint = theMouseEvent.getPoint();
        }
        myEndPoint = theMouseEvent.getPoint(); 
        repaint();
    }

    @Override
    public void mouseMoved(final MouseEvent theMouseEvent) {
        // TODO Auto-generated method stub
        if(myStartPoint != null && drawable == true){
            myEndPoint = theMouseEvent.getPoint();
            
        } 
        
        if(drawable = true && myStartPoint == null) {
            myStartPoint = null;
            myEndPoint = null;  
        }
        else {
            drawable = false;
        }
        repaint();
       
    }
    

}
