/**
 * 
 */
package view;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSlider;
import javax.swing.JToolBar;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import javafx.scene.paint.Color;


/**
 * @author ao1013
 * @version 11/7/15 TCSS 305
 */
public class Toolbar {
    /** The default width of the frame. */
    public static final int DEFAULT_WIDTH = 400;
    /** The default height of the frame. */
    public static final int DEFAULT_HEIGHT = 200;
   /**
    * The Menu Bar for the frame.
    */
    private JMenuBar myMenuBar;
    /**
     * The frame of the paint program that holds all components.
     */
    private JFrame myFrame;
    /**
     * The dragable tool bar.
     */
    private JToolBar myMovableTool;
    /**
     * The color chooser object.
     */
    private JColorChooser myColor;
    /**
     * The color object to hold the selected color.
     */
    java.awt.Color myCurrentColor;
    private int myPenThickness = 0;
    /**
     * The canvas object, where all painting occurs.
     */
    private Canvas myCanvas;
    /**
     * Default constructor to initialize all components.
     */
    public Toolbar() {
        myColor = new JColorChooser();
        myCurrentColor = java.awt.Color.BLACK;
        myFrame = new JFrame("PowerPaint");
        ImageIcon tempIcon = new ImageIcon("./images/w.gif");
        myFrame.setIconImage(tempIcon.getImage());
        myCanvas = new Canvas();
        myFrame.add(myCanvas, BorderLayout.CENTER);
        myMovableTool = new JToolBar();
        myMenuBar = new JMenuBar();
    
      
    }
   /**
    * 
    */
    public void start() {
       
        final JMenu fileMenu = new JMenu("File");
        fileMenu.setMnemonic(KeyEvent.VK_F);
        final JMenuItem exit = new JMenuItem("Exit", KeyEvent.VK_E);
        final JMenuItem undoAll = new JMenuItem("Undo all changes", KeyEvent.VK_U);
        fileMenu.add(undoAll);
        fileMenu.addSeparator();
        fileMenu.add(exit);
        myMenuBar.add(fileMenu);
         
        
//////////////////////////////////////////////////////////////////////////////////////
        
        int min = 0;
        int max = 20;
        final JMenu options = new JMenu("Options");
        options.setMnemonic(KeyEvent.VK_O);
        final JCheckBoxMenuItem grid = new JCheckBoxMenuItem("Grid");
        grid.setMnemonic(KeyEvent.VK_G);
        final JMenu thickness = new JMenu("Thickness");
        thickness.setMnemonic( KeyEvent.VK_T);
        JSlider slider = new JSlider(JSlider.HORIZONTAL,min,max,min+1);
        slider.setMajorTickSpacing(5);
        slider.setMinorTickSpacing(1);
        slider.setPaintTicks(true);
        slider.setPaintLabels(true);
        slider.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent theEvent) { 
                myPenThickness = slider.getValue();
            }
        });
        thickness.add(slider);
        final JCheckBoxMenuItem color = new JCheckBoxMenuItem("Color");
        color.setMnemonic(KeyEvent.VK_C);
        color.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent theEvent) {
                myCurrentColor = JColorChooser.showDialog(myFrame, 
                                                          "Choose a color", myCurrentColor);
            }
        });
        options.add(grid);
        options.addSeparator();
        options.add(thickness);
        options.addSeparator();
        options.add(color);
        myMenuBar.add(options);
         
        
        
        
        
        //////////////////////////////////////////////////////////////////////////////////////
        final JMenu tools = new JMenu("Tools");
        tools.setMnemonic(KeyEvent.VK_T);
        final JRadioButtonMenuItem pencil = new JRadioButtonMenuItem("Pencil",
                                                    new ImageIcon("./images/pencil.gif"));
        pencil.setMnemonic(KeyEvent.VK_P);
        final JRadioButtonMenuItem line = new JRadioButtonMenuItem("Line",
                                                    new ImageIcon("./images/line.gif"));
        line.setMnemonic(KeyEvent.VK_L);
        final JRadioButtonMenuItem rectangle = new JRadioButtonMenuItem("Rectangle",
                                                    new ImageIcon("./images/rectangle.gif"));
        rectangle.setMnemonic(KeyEvent.VK_R);
        final JRadioButtonMenuItem ellipse = new JRadioButtonMenuItem("Ellipse",
                                                    new ImageIcon("./images/ellipse.gif"));
        ellipse.setMnemonic(KeyEvent.VK_E);
        tools.add(pencil);
        tools.addSeparator();
        tools.add(line);
        tools.addSeparator();
        tools.add(rectangle);
        tools.addSeparator();
        tools.add(ellipse);
        
//////////////////////////////////////////////////////////////////////////////////////
        
        final JButton mPencil = new JButton("Pencil",
                                      new ImageIcon("./images/pencil.gif"));
        final JButton mLine = new JButton("Line",
                                    new ImageIcon("./images/line.gif"));
        final JButton mRectangle = new JButton("Rectangle",
                                         new ImageIcon("./images/rectangle.gif"));
        final JButton mEllipse = new JButton("Ellipse",
                                       new ImageIcon("./images/ellipse.gif"));
        myMovableTool.add(mPencil);
        myMovableTool.add(mLine);
        myMovableTool.add(mRectangle);
        myMovableTool.add(mEllipse);
        myMenuBar.add(tools, BorderLayout.NORTH);
        myFrame.add(myMovableTool, BorderLayout.SOUTH); 
        
        final JMenu help = new JMenu("Help");
        help.setMnemonic(KeyEvent.VK_H);
        final JMenuItem about = new JMenuItem("About", KeyEvent.VK_A);
        help.add(about);
        myMenuBar.add(help);
        fileMenu.setMnemonic(KeyEvent.VK_F);
         
        myFrame.setJMenuBar(myMenuBar);
        myFrame.setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);
        myFrame.setVisible(true);
    }
}
